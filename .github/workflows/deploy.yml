name: Deploy Vulnerable Application                                  # workflow name
on:
  push:
    branches:
      - master
jobs:

  dependabot:
    runs-on: ubuntu-latest
    if: dependabot[bot]
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: ${{ secrets.TOKEN_GITHUB }}

  sonarQubeTrigger:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@master
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}


  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "damn-vulnerable-app-elian" #Must be unique in Heroku
          heroku_email: "elianbarci@hotmail.com"
          remote_branch: "master"
          usedocker: true
          
  zap_scan:
    runs-on: ubuntu-latest
    name: Scan ZAP website
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          target: ${{secrets.MASTER_URL}}
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'